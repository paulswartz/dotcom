name: CI
on:
  push:
    branches: [main]
  pull_request:
    # Don't bother running if it's just a script or docs change
    paths-ignore:
      - "bin/**"
      - Dockerfile
      - "*.sh"
      - "*.md"
      - AUTHORS

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  MIX_ENV: test
  MBTA_API_BASE_URL: ${{ secrets.MBTA_API_BASE_URL }}
  MBTA_API_KEY: ${{ secrets.MBTA_API_KEY }}

jobs:
  # Report file changes by extensions
  # Used to determine which tests to run
  file_changes:
    name: File changes
    uses: ./.github/workflows/changed-files.yml
    with:
      # If it's a Dependabot PR, or a push to main, we want to run every test
      force: ${{ github.event_name == 'push' || contains(github.head_ref, 'dependabot/hex') || contains(github.head_ref, 'dependabot/npm_and_yarn') }}

  build_app:
    name: Build app (or restore from cache)
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.any }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/build-app

  eslintts:
    name: Linting / TypeScript
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.ts }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: npm run ci:lint:ts

  jslint:
    name: Linting / JavaScript
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.js }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: npm run ci:lint:js

  stylelint:
    name: Linting / CSS
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.scss }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: npm run ci:lint:scss

  elixirlint:
    name: Linting / Elixir
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: npm run ci:lint:ex

  elixir_unit:
    name: Unit tests / Elixir / --exclude wallaby --cover
    runs-on: ubuntu-latest
    needs: [file_changes, build_app]
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - uses: actions/cache/restore@v4
      with:
        path: |
          _build
          priv
          react_renderer/dist/app.js
        key: ci-application-cache-${{ github.sha }}
    - env:
        RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
        RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
        REACT_BUILD_PATH: react_renderer/dist/app.js
      run: npm run ci:unit:exunit
    - name: Upload coverage artifact
      if: ${{ always() && github.event.pull_request }}
      uses: actions/upload-artifact@v4
      with:
        name: Elixir test coverage report
        path: cover/

  js_unit_1:
    name: Unit tests / JavaScript / Mocha
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.js }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: npm run ci:unit:mocha

  js_unit_2:
    name: Unit tests / JavaScript & TypeScript / Jest
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.ts || needs.file_changes.outputs.js }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: TZ="America/New_York" npm run ci:unit:jest

  type_dialyzer:
    name: Type checks / Elixir
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - uses: mbta/actions/dialyzer@v2
      with:
        cmd-line: "--ignore-exit-status"

  type_typescript:
    name: Type checks / TypeScript
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.ts }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: npm run ci:types:ts

  elixir_format_check:
    name: Formatting / Elixir
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.ex }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: npm run ci:format:ex

  js_format_check:
    name: Formatting / JavaScript & TypeScript
    runs-on: ubuntu-latest
    needs: file_changes
    if: ${{ needs.file_changes.outputs.js || needs.file_changes.outputs.ts }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup-all
    - run: npm run ci:format:ts
