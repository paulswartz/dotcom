name: CI

on: [push]

jobs:
  ci:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    # cache the ASDF directory, using the values from .tool-versions
    - name: ASDF cache
      uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      id: asdf-cache
    # only run `asdf install` if we didn't hit the cache
    - uses: asdf-vm/actions/install@v1
      if: steps.asdf-cache.outputs.cache-hit != 'true'
    # if we did hit the cache, set up the environment
    - name: Setup ASDF environment
      run: |
        echo "ASDF_DIR=$HOME/.asdf" >> $GITHUB_ENV
        echo "ASDF_DATA_DIR=$HOME/.asdf" >> $GITHUB_ENV
      if: steps.asdf-cache.outputs.cache-hit == 'true'
    - name: Reshim ASDF
      run: |
        echo "$ASDF_DIR/bin" >> $GITHUB_PATH
        echo "$ASDF_DIR/shims" >> $GITHUB_PATH
        $ASDF_DIR/bin/asdf reshim
    - name: Restore Elixir dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install Elixir dependencies
      run: |
        mix local.hex --force
        mix local.rebar --force
        mix deps.get
    - name: Restore NodeJS dependencies cache
      uses: actions/cache@v2
      with:
        path: "apps/site/*/node_modules"
        key: ${{ runner.os }}-nodejs-${{ hashFiles('apps/site/*/package-lock.json') }}
        restore-keys: ${{ runner.os }}-nodejs-
    - name: Install NodeJS dependencies
      run: |
        git config --global url."https://github.com/".insteadOf ssh://git@github.com/
        npm run install:ci && npm run react:setup:ci
    - name: Credo
      run: bash semaphore/credo.sh
    - name: JS Formatting
      run: npm run format:check
    - name: Stylelint
      run: npm run stylelint
    - name: TS Lint
      run: npm run tslint
    - name: Build app
      run: bash semaphore/build_app.sh
    - name: JS Tests
      run: npm run test:js
    - name: Run Elixir tests
      env:
        V3_URL: ${{ secrets.V3_URL }}
        V3_API_KEY: ${{ secrets.V3_API_KEY }}
        OPEN_TRIP_PLANNER_URL: ${{ secrets.OPEN_TRIP_PLANNER_URL }}
        RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
        RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
      run: mix test --cover --exclude=wallaby
    - name: Save PR information
      run: |
        echo "${{ github.event.pull_request.number }}" > coverage/PR_NUMBER
        echo "${{ github.event.pull_request.head.sha }}" > coverage/PR_SHA
      if: github.event.pull_request
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v2
      with:
        name: elixir-lcov
        path: cover/
    - uses: mbta/actions/dialyzer@v1
    # - name: Wallaby
    #   env:
    #     V3_URL: ${{ secrets.V3_URL}}
    #     V3_API_KEY: ${{ secrets.V3_API_KEY }}
    #     RECAPTCHA_PUBLIC_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
    #     RECAPTCHA_PRIVATE_KEY: 6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
    #   run: mix test --only wallaby
